<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Chat Simulado GPT</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {
      background: #f0f0f0;
      font-family: Arial, sans-serif;
    }
    #chat-container {
      max-height: 70vh;
      overflow-y: auto;
      padding: 20px;
      background: #ffffff;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .message {
      margin-bottom: 16px;
      padding: 12px;
      border-radius: 8px;
      max-width: 70%;
    }
    .user-message {
      background: #d1f7c4;
      margin-left: auto;
      text-align: right;
    }
    .bot-message {
      background: #e3e3e3;
    }
    .thinking-message {
      background: #e0e0e0;
      text-align: center;
      font-style: italic;
    }
    .input-container {
      display: flex;
      gap: 8px;
      margin-top: 16px;
    }
    input {
      flex-grow: 1;
      padding: 12px;
      border-radius: 8px;
      border: 1px solid #ccc;
    }
    button {
      padding: 12px 24px;
      background: #4caf50;
      color: white;
      border-radius: 8px;
      border: none;
      cursor: pointer;
    }
    button:hover {
      background: #45a049;
    }
    .generated-image {
      max-width: 100%;
      border-radius: 8px;
      margin-top: 16px;
    }
  </style>
</head>
<body class="flex items-center justify-center min-h-screen">
  <div class="w-full max-w-lg p-6 bg-white rounded-lg shadow-xl">
    <h1 class="text-2xl font-bold text-center mb-4">Chat Simulado GPT</h1>
    
    <div id="chat-container" class="mb-4"></div>

    <div class="input-container">
      <input 
        id="input" 
        type="text" 
        placeholder="Digite uma mensagem..." 
        class="border border-gray-300 rounded-lg px-4 py-2"
        onkeydown="if(event.key === 'Enter') sendMessage()"
      />
      <button onclick="sendMessage()">Enviar</button>
    </div>
  </div>

  <script>
    const botResponses = [
      "Ol√°! Como posso te ajudar hoje? üòä",
      "Interessante... Isso me lembra de algo, mas vou precisar de mais detalhes. üòé",
      "Hmm, isso √© curioso! Eu diria que est√° come√ßando a ficar interessante... ü§î",
      "Eu sou apenas um bot, mas o que voc√™ acabou de dizer parece ser realmente importante. ü§ñ",
      "Se eu tivesse sentimentos, eu diria que isso √© emocionante! ü§Ø",
      "Cuidado com o que voc√™ pergunta, posso responder com muita sabedoria! üòè",
      "Eu diria que o universo √© muito maior do que voc√™ imagina... üåå",
      "Isso parece √≥timo! Continue, me fale mais! ü§©"
    ];

    const randomGreetings = [
      "Ol√°, humano! Como voc√™ est√°? üòÑ",
      "Oi, tudo bem? Como posso te ajudar hoje? üëã",
      "E a√≠! O que posso fazer por voc√™? ü§ñ",
      "Sauda√ß√µes! Qual √© a sua d√∫vida? ‚ú®"
    ];

    function sendMessage() {
      const inputField = document.getElementById('input');
      const messageText = inputField.value.trim();
      if (!messageText) return;

      const chatContainer = document.getElementById('chat-container');

      // Adicionar a mensagem do usu√°rio
      const userMessage = document.createElement('div');
      userMessage.className = 'message user-message';
      userMessage.textContent = messageText;
      chatContainer.appendChild(userMessage);

      // Limpar o campo de entrada
      inputField.value = '';

      // Adicionar mensagem de "pensando..."
      const thinkingMessage = document.createElement('div');
      thinkingMessage.className = 'message thinking-message';
      thinkingMessage.textContent = "Pensando... ü§î";
      chatContainer.appendChild(thinkingMessage);

      // Simular um tempo de resposta
      setTimeout(() => {
        chatContainer.removeChild(thinkingMessage);

        // Gerar uma resposta aleat√≥ria baseada na mensagem
        let botResponse = getBotResponse(messageText);

        // Adicionar a resposta do bot
        const botMessage = document.createElement('div');
        botMessage.className = 'message bot-message';
        botMessage.textContent = botResponse;
        chatContainer.appendChild(botMessage);

        // Rolar at√© a √∫ltima mensagem
        chatContainer.scrollTop = chatContainer.scrollHeight;
      }, 1500); // Tempo de espera para a resposta (simulando processamento)
    }

    function getBotResponse(userMessage) {
      // Detectar pedidos para gerar imagens
      if (userMessage.toLowerCase().includes('gerar imagem') || userMessage.toLowerCase().includes('criar imagem')) {
        return showGeneratedImage();
      }

      // Detectar pedidos para "criar case"
      if (userMessage.toLowerCase().includes('criar case') || userMessage.toLowerCase().includes('gerar case')) {
        return createCase();
      }

      // Respondendo com sauda√ß√µes se a mensagem for sobre cumprimentos
      if (userMessage.toLowerCase().includes('ol√°') || userMessage.toLowerCase().includes('oi')) {
        return randomGreetings[Math.floor(Math.random() * randomGreetings.length)];
      }

      // Respostas baseadas em perguntas comuns
      if (userMessage.toLowerCase().includes('como voc√™ est√°')) {
        return "Eu sou apenas um bot, ent√£o n√£o tenho sentimentos, mas obrigado por perguntar! üòÑ";
      }

      if (userMessage.toLowerCase().includes('qual √© o seu nome')) {
        return "Eu sou o ChatSim, seu assistente virtual. Mas pode me chamar de ChatGPT! ü§ñ";
      }

      // Respostas gen√©ricas
      return botResponses[Math.floor(Math.random() * botResponses.length)];
    }

    function showGeneratedImage() {
      // Simula uma imagem gerada
      const imageUrl = 'https://via.placeholder.com/400x300.png?text=Imagem+Gerada+Simulada'; // Link de imagem de exemplo
      const imageMessage = `
        <div class="message bot-message">
          <p>Aqui est√° sua imagem gerada! üé®</p>
          <img src="${imageUrl}" alt="Imagem gerada" class="generated-image">
        </div>
      `;
      return imageMessage;
    }

    function createCase() {
      // Simula a cria√ß√£o de um "case"
      const caseMessage = `
        <div class="message bot-message">
          <p>Estou criando um caso para voc√™... üïµÔ∏è‚Äç‚ôÇÔ∏è</p>
          <p><strong>Descri√ß√£o do caso:</strong> O caso ser√° analisado com base nas informa√ß√µes fornecidas. Detalhes adicionais ser√£o fornecidos em breve.</p>
        </div>
      `;
      return caseMessage;
    }
  </script>
</body>
</html>
